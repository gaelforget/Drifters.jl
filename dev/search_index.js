var documenterSearchIndex = {"docs":
[{"location":"#IndividualDisplacements.jl-1","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"","category":"section"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"IndividualDisplacements.jl computes elementary point displacements over a gridded Earth domain (e.g. a climate model C-grid). A typical application is the simulation and analysis of materials moving through atmospheric flows (e.g. dust or chemicals) or oceanic flows (e.g. plastics or planktons).","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"Inter-operability with popular climate model grids and their representation in MeshArrays.jl is a central element. The package can also read and plot trajectory simulation output from e.g. the MITgcm. It was originally developed using ECCOv4 and CBIOMES ocean model simulations (Forget et al. 2015).","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"The ⬡ and ⬡! functions compute the tracked point / individual / agent velocities. ","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"(Image: SolidBodyRotation)","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"tests/runtests.jl uses this solid body rotation case as a unit test case.","category":"page"},{"location":"#List-Of-Examples-1","page":"IndividualDisplacements.jl","title":"List Of Examples","text":"","category":"section"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"Solid body rotation is used for unit testing:","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"test/runtests.jl\nexamples/SolidBodyRotation.jl","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"The two examples documented under API + extenstions to example2:","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"src/examples.jl\nexamples/example2fleet.jl\nexamples/example2more.jl","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"An intermediate example: examples/PeriodicChannel_fleet.jl","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"Two examples use VelComp! and update_locations.jl:","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"examples/PeriodicDomainRandom_fleet.jl\nexamples/GlobalDomain_fleet.jl","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"Plotting recipes using three popular plotting packages are provided in:","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"examples/plot_plots.jl\t\t(PlotBasic)\nexamples/plot_makie.jl\t\t(PlotMakie)\nexamples/plot_pyplot.jl\t\t(PlotMapProj)","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"(Image: SolidBodyRotation)","category":"page"},{"location":"#API-Guide-1","page":"IndividualDisplacements.jl","title":"API Guide","text":"","category":"section"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"Modules = [IndividualDisplacements]\nOrder   = [:type,:function]","category":"page"},{"location":"#IndividualDisplacements.ReadDisplacements-Tuple{String,DataType}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.ReadDisplacements","text":"ReadDisplacements(dirIn::String,prec::DataType)\n\nRead displacements from MITgcm output file using MeshArrays and return as a DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.initialize_locations","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.initialize_locations","text":"initialize_locations(uvetc::Dict,n_subset::Int=1)\n\nDefine u0 as an array of initial conditions\n\n\n\n\n\n","category":"function"},{"location":"#IndividualDisplacements.postprocess_ODESolution-Tuple{Any,Any,Any}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.postprocess_ODESolution","text":"postprocess_ODESolution()\n\nCopy sol to a DataFrame & map position to lon,lat coordinates\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.read_uvetc-Tuple{Int64,Dict,String}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.read_uvetc","text":"read_uvetc(k::Int,γ::Dict,pth::String)\n\nDefine uvetc given the grid variables γ and a vertical level choice k including velocities obtained from files in pth\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.NeighborTileIndices_cs-Tuple{Dict}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.NeighborTileIndices_cs","text":"NeighborTileIndices_cs(grid::Dict)\n\nDerive list of neighboring tile indices for a cs or llc grid + functions that convert indices from one tile to another. Returns a Dict to merge later.\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.NeighborTileIndices_dpdo-Tuple{Int64,Int64}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.NeighborTileIndices_dpdo","text":"NeighborTileIndices_dpdo(ni::Int,nj::Int)\n\nList of W, E, S, N neighbor tile IDs in the case of a doubly periodic domain with ni x nj tiles.\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.RelocationFunctions_cs-Tuple{MeshArrays.gcmarray}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.RelocationFunctions_cs","text":"RelocationFunctions_cs(xmpl)\n\nDefine matrix of functions to convert indices across neighboring tiles\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.RelocationFunctions_cs_check-Tuple{MeshArrays.gcmarray,Array{Function,2},Int64}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.RelocationFunctions_cs_check","text":"RelocationFunctions_cs_check(xmpl,RF,trgt)\n\nVisualize that RelocationFunctions_cs behaves as expected\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.VelComp!-Tuple{Array{Float64,1},Array{Float64,1},Dict,Any}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.VelComp!","text":"VelComp!(du,u,p::Dict,tim)\n\nInterpolate velocity from gridded fields (after exchange on u0,v0) and return position increment du (i.e. x,y,fIndex).\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.VelComp-Tuple{Array{Float64,1},Array{Float64,1},Dict,Any}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.VelComp","text":"VelComp(du,u,p::Dict,tim)\n\nInterpolate velocity from gridded fields and return position increment du\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.VelCopy-Tuple{Any,Any,DataFrames.DataFrame,Any}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.VelCopy","text":"VelCopy(du,u,p::DataFrame,t)\n\nInterpolate velocity from MITgcm float_trajectories output and return position increment du.\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.example1-Tuple{}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.example1","text":"example1()\n\nPre-computed global ocean case. Here we just re-read data from a file produced earlier, rather than computing trajectories as in the other examples.\n\ndf=IndividualDisplacements.example1()\n\np=dirname(pathof(IndividualDisplacements))\ninclude(joinpath(p,\"plot_pyplot.jl\"))\nPyPlot.figure(); PlotMapProj(df,300); gcf()\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.example2-Tuple{}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.example2","text":"example2()\n\nReproducing MITgcm/verification/flt_example/ case. This is based on an extended and modified configuration of the standard MITgcm test case.\n\n(df,ref,sol)=IndividualDisplacements.example2();\n\np=dirname(pathof(IndividualDisplacements))\ninclude(joinpath(p,\"plot_pyplot.jl\"))\nPyPlot.figure(); PlotBasic(df,300,100000.0); gcf()\n\nusing Plots\nPlots.plot(sol[1,:],sol[2,:],linewidth=5,lc=:black, title=\"One Trajectory Example\",\nxaxis=\"x\",yaxis=\"y\",label=\"Julia Solution\") # legend=false\npl=Plots.plot!(ref[1,:],ref[2,:],lw=3,ls=:dash,lc=:red,label=\"MITgcm Solution\")\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.example2_setup-Tuple{}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.example2_setup","text":"example2_setup()\n\nRead gridded variables from file using MeshArrays and return result in uvetc Dictionary.\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.example3_setup-Tuple{}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.example3_setup","text":"example3_setup()\n\nDefine gridded variables and return result as Dictionary (uvetc).\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.myread-Tuple{String,MeshArrays.gcmarray}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.myread","text":"myread()\n\nRead a gridded variable from 2x2 tile files. This is used in example2_setup() with flt_example/\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.read_velocities-Tuple{MeshArrays.gcmgrid,Int64,String}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.read_velocities","text":"read_velocities(γ::gcmgrid,t::Int,pth::String)\n\nRead velocity components u,v from files in pthfor time t\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.update_location_cs!-Tuple{Array{Float64,1},Dict}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.update_location_cs!","text":"update_location_cs!\n\nUpdate location (x,y,fIndex) when out of domain. Note: initially, this only works for the dpdo grid type provided by MeshArrays.jl.\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.update_location_dpdo!-Tuple{Array{Float64,1},MeshArrays.gcmgrid}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.update_location_dpdo!","text":"update_location_dpdo!\n\nUpdate location (x,y,fIndex) when out of domain. Note: initially, this only works for the dpdo grid type provided by MeshArrays.jl.\n\n\n\n\n\n","category":"method"}]
}
